{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAcC,EAAGC,GACxB,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAQC,OAAOL,EAASM,YAAcD,OAAOL,EAASO,KAAOR,GAYnE,OAVgB,IAAIS,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLV,EACFQ,EAAQ,qBAAiCG,OAAZb,EAAI,EAAE,QAAYa,OAANR,EAAM,QAE/CM,EAAO,kBAA8BE,OAAZb,EAAI,EAAE,QAAYa,OAANR,EAAM,O,GAE5CA,E,IAfQS,SAASC,cAAc,SAE/BC,iBAAiB,UAmBxB,SAAsBC,GACpBA,EAAMC,iBAcN,IAZA,IAAMC,EAAeF,EAAMG,cAAcC,SAEnCd,EAAaY,EAAad,MAAMiB,MAChCd,EAAOW,EAAaX,KAAKc,MACzBC,EAASJ,EAAaI,OAAOD,MAE7BrB,EAAW,CACfM,aACAC,OACAe,UAGOvB,EAAI,EAAGA,EAAIuB,EAAQvB,IAC1BD,EAAcC,EAAGC,GACduB,MAAK,SAAAC,G,OAAK5B,EAAA6B,OAAOC,QAAQF,E,IACzBG,OAAM,SAAAH,G,OAAK5B,EAAA6B,OAAOG,QAAQJ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst elForm = document.querySelector('.form');\n\nelForm.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(i, formData) {\n  const shouldResolve = Math.random() > 0.3;\n  const delay = Number(formData.firstDelay) + Number(formData.step * i);\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`Fulfilled promise ${i + 1} in ${delay} ms`);\n      } else {\n        reject(`Reject promise ${i + 1} in ${delay} ms`);\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const formElements = event.currentTarget.elements;\n\n  const firstDelay = formElements.delay.value;\n  const step = formElements.step.value;\n  const amount = formElements.amount.value;\n\n  const formData = {\n    firstDelay,\n    step,\n    amount,\n  };\n\n  for (let i = 0; i < amount; i++) {\n    createPromise(i, formData)\n      .then(x => Notify.success(x))\n      .catch(x => Notify.failure(x));\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","i","formData","shouldResolve","Math","random","delay","Number","firstDelay","step","Promise","resolve","reject","setTimeout","concat","document","querySelector","addEventListener","event","preventDefault","formElements","currentTarget","elements","value","amount","then","x","Notify","success","catch","failure"],"version":3,"file":"03-promises.c410f538.js.map"}